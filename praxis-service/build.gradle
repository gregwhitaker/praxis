import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id "java"
    id "org.springframework.boot"
    id "io.spring.dependency-management"
    id "com.bmuschko.docker-remote-api"
}

dependencies {
    implementation project(':praxis-db')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.zaxxer:HikariCP:3.3.0'
    implementation 'commons-lang:commons-lang:2.6'
    implementation 'commons-codec:commons-codec:1.11'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

// Testing
test {
    useJUnitPlatform()
}

// Packaging
task buildImage(type: DockerBuildImage, dependsOn: build) {
    buildArgs = ['JAR_FILE': "${bootJar.getArchiveFileName()}"]
    dockerFile = file("${projectDir}/Dockerfile")
    inputDir = file("${projectDir}")
    tags = ["praxis/${projectDir.name}", "praxis/${projectDir.name}:${version}"]
}
